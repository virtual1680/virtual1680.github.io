{"version":3,"mappings":"+CAoCA,gFACAA,6bAKO,oDC3BP,8CD2BO,KACN,qCACAC,iCACA,QAAaC,IAAIC,QACjB,MAAWD,IAAIC,QACfC,EAAaF,IAASG,aACtBC,EAAiBJ,IAAIC,QACrBI,EAAUL,IAASG,aACnBG,EAAyCN,IAAIC,MAC7CM,EAAcP,YACd,QAAaA,IAAIC,eACPO,QACHC,UAIPC,EAAgBV,mBACf,CAAOC,WACDU,eACcC,aACRC,yBAIbC,EAAgBd,mBACf,CAAO,gBACS,mBACG,aACN,eACE,YACH,mBACO,iBACF,sBAIlBe,EAAef,kBACdW,iBAEDK,cACCZ,uBAEDL,cACCM,WAID,aAmBCY,iBACCN,eAnBD,YACCJ,WACA,qEACAW,WACAb,4DAEE,gBACAc,qCACA,+BACAD,UACAD,gBACCN,kBACDS,cAGAb,mBASJc,YACC,MAgBAV,aACCA,cAhBAW,yCACAjB,oEAGEM,WACCA,cAEAY,6CAEIC,oBAWTC,cACC,MAgBAd,gBACCA,iBAhBAW,yCACAjB,0EAGEM,cACCA,iBAEAY,6CAEIC,oBAWTE,UACC,mBACCrB,yEAECM,WACCA,kBAEAY,0CAIHZ,aACCA,mBAGaY,oEAAgDI,uBACzCC,sBACDC,iBACZC,mBAMTC,gBAECC,OACA9B,mDAEAiB,uBAGDc,YAGAC,MACCf,kBACAA,oBAGDgB,MACChB,uBAID,oFC5LDiB,uBACAC,wBACAC,iBAGAhB,6BACApB,2BACAA,yBACAoB,uCAEApB,GACAqC,kBAIAC,cAEAC,2BAGAzC,oBACAM","names":["apiObj","apiO","Vue","ref","params","reactive","avueOption","api","crud","loading","size","total","bindVal","option","data","tableLoading","onEvent","rowKey","optionO","isFunction","list","page","finally","rowSave","Reflect","ElementPlus","catch","rowUpdate","rowDel","confirmButtonText","cancelButtonText","type","then","searchChange","done","refreshChange","sizeChange","currentChange","useCrud","optionPath","searchParams","listBefore","listAfter","res"],"sources":["../../src/hooks/useCrud.ts","../../src/views/util/crud.vue"],"sourcesContent":["import { ref, Ref, reactive, computed } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { isFunction } from 'lodash-es';\nimport { DataPage, Result } from '@/typings/axios';\ntype BaseParams = string | number | boolean | symbol;\ntype SearchParams = Record<string, BaseParams | BaseParams[]>;\ninterface CrudOption<T> {\n\t/** 唯一值 key */\n\trowKey?: string;\n\t/** api 接口文件路径  */\n\tapiPath: string;\n\t// option 配置文件路径\n\toptionPath: string;\n\t// api 接口名称\n\tapiName?: {\n\t\tlist?: string;\n\t\tadd?: string;\n\t\tupdate?: string;\n\t\tdel?: string;\n\t};\n\t// res?: (data: Result<DataPage<T>>) => T[];\n\t// 对搜索的参数进行改造\n\tsearchParams?: (params: SearchParams) => SearchParams;\n\n\tlistAfter?: (data: DataPage<T>) => void;\n\tlistBefore?: () => void;\n\taddAfter?: (data?: Result) => void;\n\taddBefore?: () => void;\n\tupdateAfter?: (data?: Result) => void;\n\tupdateBefore?: () => void;\n\tdelAfter?: (data: Result, row: unknown, index: number) => void;\n\tdelBefore?: () => void;\n\n\ttotalKey?: string;\n\tdataKey?: string;\n}\nlet optionObj = import.meta.glob(`../option/**/**`);\nlet apiObj = import.meta.glob(`../api/**/**`);\n\n/**\n * 表单基本逻辑\n */\nexport const useCrud = <T = any>(option: CrudOption<T>) => {\n\tlet optionO = optionObj[`../option/${option.apiPath}.ts`];\n\tlet apiO = apiObj[`../api/${option.optionPath}.ts`];\n\tconst list = ref([]);\n\tlet form = ref({});\n\tlet params = reactive({});\n\tlet avueOption = ref({});\n\tlet api = reactive({});\n\tlet crud: Ref<HTMLElement | undefined> = ref();\n\tlet loading = ref(false);\n\tconst page = ref({\n\t\tcurrent: 1,\n\t\tsize: 20,\n\t\ttotal: 0\n\t});\n\n\tconst bindVal = computed(() => {\n\t\treturn {\n\t\t\tref: 'crud',\n\t\t\toption: avueOption.value,\n\t\t\tdata: list.value,\n\t\t\ttableLoading: loading.value\n\t\t};\n\t});\n\tconst onEvent = computed(() => {\n\t\treturn {\n\t\t\t'size-change': sizeChange,\n\t\t\t'current-change': currentChange,\n\t\t\t'row-save': rowSave,\n\t\t\t'row-update': rowUpdate,\n\t\t\t'row-del': rowDel,\n\t\t\t'refresh-change': refreshChange,\n\t\t\t'search-reset': searchChange,\n\t\t\t'search-change': searchChange\n\t\t};\n\t});\n\tconst rowKey = computed(() => {\n\t\treturn option.rowKey || 'id';\n\t});\n\toptionO().then(mode => {\n\t\tavueOption.value = mode.default();\n\t});\n\tapiO().then(mode => {\n\t\tapi = mode;\n\t\tgetList();\n\t});\n\t// * 分页数据请求\n\tconst getList = () => {\n\t\tconst callback = () => {\n\t\t\tloading.value = true;\n\t\t\tconst paramsObj = Object.assign({ current: page.value.current, size: page.value.size }, params);\n\t\t\tlist.value = [];\n\t\t\tapi[option.apiName?.list || 'list'](paramsObj)\n\t\t\t\t.then((res: Result<DataPage<T>>) => {\n\t\t\t\t\tconst { data } = res;\n\t\t\t\t\tpage.value.total = data[option.totalKey || 'total'];\n\t\t\t\t\tconst result = data[option.dataKey || 'record'];\n\t\t\t\t\tlist.value = result;\n\t\t\t\t\tif (isFunction(option.listAfter)) {\n\t\t\t\t\t\toption.listAfter(data);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tloading.value = false;\n\t\t\t\t});\n\t\t};\n\t\tif (isFunction(option.listBefore)) {\n\t\t\toption.listBefore();\n\t\t}\n\t\tcallback();\n\t};\n\t// * 数据保存请求\n\tconst rowSave = (row: any, done: () => void, loading: () => void) => {\n\t\tconst callback = () => {\n\t\t\tReflect.deleteProperty(form.value, 'params');\n\t\t\tapi[option.apiName?.add || 'add'](form.value)\n\t\t\t\t.then((data: Result) => {\n\t\t\t\t\tgetList();\n\t\t\t\t\tif (option.addAfter) {\n\t\t\t\t\t\toption.addAfter(data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tElMessage.success('新增成功');\n\t\t\t\t\t}\n\t\t\t\t\tdone();\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tloading();\n\t\t\t\t});\n\t\t};\n\t\tif (option.addBefore) {\n\t\t\toption.addBefore();\n\t\t}\n\t\tcallback();\n\t};\n\tconst rowUpdate = (row: unknown, index: number, done: () => void, loading: () => void) => {\n\t\tconst callback = () => {\n\t\t\tReflect.deleteProperty(form.value, 'params');\n\t\t\tapi[option.apiName?.update || 'update'](form.value)\n\t\t\t\t.then((data: Result) => {\n\t\t\t\t\tgetList();\n\t\t\t\t\tif (option.updateAfter) {\n\t\t\t\t\t\toption.updateAfter(data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tElMessage.success('更新成功');\n\t\t\t\t\t}\n\t\t\t\t\tdone();\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tloading();\n\t\t\t\t});\n\t\t};\n\t\tif (option.updateBefore) {\n\t\t\toption.updateBefore();\n\t\t}\n\t\tcallback();\n\t};\n\tconst rowDel = (row: any, index: number) => {\n\t\tconst callback = () => {\n\t\t\tapi[option.apiName?.del || 'del'](row[rowKey.value], row).then((data: Result) => {\n\t\t\t\tgetList();\n\t\t\t\tif (option.delAfter) {\n\t\t\t\t\toption.delAfter(data, row, index);\n\t\t\t\t} else {\n\t\t\t\t\tElMessage.success('删除成功');\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\tif (option.delBefore) {\n\t\t\toption.delBefore();\n\t\t\tcallback();\n\t\t} else {\n\t\t\tElMessageBox.confirm(`此操作将永久删除序号【${index}】的数据, 是否继续?`, '提示', {\n\t\t\t\tconfirmButtonText: '确定',\n\t\t\t\tcancelButtonText: '取消',\n\t\t\t\ttype: 'warning'\n\t\t\t}).then(() => {\n\t\t\t\tcallback();\n\t\t\t});\n\t\t}\n\t};\n\tconst searchChange = (sep: SearchParams, done: () => void) => {\n\t\tconsole.log('原参数---', sep);\n\t\tif (done) done();\n\t\tparams = option.searchParams?.(sep) || sep;\n\t\tconsole.log('改造变后参数---', params);\n\t\tpage.value.current = 1;\n\t\tgetList();\n\t};\n\tconst refreshChange = () => {\n\t\tgetList();\n\t};\n\tconst sizeChange = (val: number) => {\n\t\tpage.value.current = 1;\n\t\tpage.value.size = val;\n\t\tgetList();\n\t};\n\tconst currentChange = (val: number) => {\n\t\tpage.value.current = val;\n\t\tgetList();\n\t};\n\n\treturn { bindVal, onEvent, rowKey, crud, refreshChange, page, form, params };\n};\n","<template>\n\t<basic-container>\n\t\t<avue-crud v-bind=\"bindVal\" v-on=\"onEvent\" v-model:page=\"page\" v-model=\"form\"> </avue-crud>\n\t</basic-container>\n</template>\n\n<script lang=\"ts\" setup>\nimport { useCrud } from '@/hooks/useCrud';\nimport { onMounted } from 'vue';\n// import { getCurrentInstance, onMounted } from 'vue';\n// const instance = getCurrentInstance();\ninterface RowData {\n\tname: string;\n\tsex: string;\n}\nlet { bindVal, onEvent, page, form, crud } = useCrud<RowData>({\n\tapiPath: 'crud/index',\n\toptionPath: 'crud/index',\n\t// 对搜索的参数进行改变 返回我们需要的参数格式\n\tsearchParams: params => {\n\t\tif (Reflect.has(params, 'queryTime')) {\n\t\t\tparams.startTime = params.queryTime[0];\n\t\t\tparams.endTime = params.queryTime[0];\n\t\t\tReflect.deleteProperty(params, 'queryTime');\n\t\t}\n\t\treturn params;\n\t},\n\tlistBefore: () => {\n\t\t// params['queryTime'];\n\t\t// page.value.size = 50;\n\t},\n\tlistAfter: res => {\n\t\tconsole.log('this is listAfter', res.record[0].name);\n\t}\n});\nonMounted(() => {\n\tconsole.log(crud.value);\n});\n</script>\n\n<style lang=\"scss\" scoped></style>\n"],"file":"assets/crud.45721f28.js"}